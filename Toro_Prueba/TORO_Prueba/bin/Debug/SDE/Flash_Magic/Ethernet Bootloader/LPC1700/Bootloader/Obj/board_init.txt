; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\board_init.o --depend=.\Obj\board_init.d --device=DARMP1 --apcs=interwork -O3 -I. -I.\Core_CM3 -ID:\Keil\ARM\INC\NXP --omf_browse=.\Obj\board_init.crf board_init\board_init.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  init_PLL PROC
;;;17     
;;;18     void init_PLL(void)
000000  b510              PUSH     {r4,lr}
;;;19     {
000002  4821              LDR      r0,|L1.136|
;;;20       // disconnect PLL0
;;;21       LPC_SC->PLL0CON &= ~0x02;
000004  6801              LDR      r1,[r0,#0]
;;;22       // feed
;;;23       LPC_SC->PLL0FEED = 0xAA;
000006  22aa              MOVS     r2,#0xaa
000008  f0210102          BIC      r1,r1,#2              ;21
00000c  6001              STR      r1,[r0,#0]            ;21
00000e  60c2              STR      r2,[r0,#0xc]
;;;24       LPC_SC->PLL0FEED = 0x55;
000010  2355              MOVS     r3,#0x55
000012  60c3              STR      r3,[r0,#0xc]
;;;25     
;;;26       // disable PLL0
;;;27       LPC_SC->PLL0CON = 0x00;
000014  2100              MOVS     r1,#0
000016  6001              STR      r1,[r0,#0]
;;;28       // feed
;;;29       LPC_SC->PLL0FEED = 0xAA;
000018  60c2              STR      r2,[r0,#0xc]
;;;30       LPC_SC->PLL0FEED = 0x55;
00001a  60c3              STR      r3,[r0,#0xc]
;;;31     
;;;32       // enable main oscillator, 1MHz - 20MHz
;;;33       LPC_SC->SCS = 0x20;
00001c  2120              MOVS     r1,#0x20
00001e  f8c01120          STR      r1,[r0,#0x120]
000022  3880              SUBS     r0,r0,#0x80
                  |L1.36|
;;;34       // wait until ready
;;;35       while (!(LPC_SC->SCS >> 6 & 0x1));
000024  f8d011a0          LDR      r1,[r0,#0x1a0]
000028  0989              LSRS     r1,r1,#6
00002a  07c9              LSLS     r1,r1,#31
00002c  d0fa              BEQ      |L1.36|
;;;36       // select main oscillator (10MHz) as input for PLL0
;;;37       LPC_SC->CLKSRCSEL = 0x01;
00002e  2101              MOVS     r1,#1
000030  3080              ADDS     r0,r0,#0x80
000032  f8c0108c          STR      r1,[r0,#0x8c]
;;;38     
;;;39       // configure PLL0
;;;40       LPC_SC->PLL0CFG = (PLL_NSEL << 16) | PLL_MSEL;
000036  4c15              LDR      r4,|L1.140|
000038  6044              STR      r4,[r0,#4]
;;;41       // feed
;;;42       LPC_SC->PLL0FEED = 0xAA;
00003a  60c2              STR      r2,[r0,#0xc]
;;;43       LPC_SC->PLL0FEED = 0x55;
00003c  60c3              STR      r3,[r0,#0xc]
;;;44     
;;;45       // enable PLL0
;;;46       LPC_SC->PLL0CON = 0x01;
00003e  6001              STR      r1,[r0,#0]
;;;47       // feed
;;;48       LPC_SC->PLL0FEED = 0xAA;
000040  60c2              STR      r2,[r0,#0xc]
;;;49       LPC_SC->PLL0FEED = 0x55;
000042  60c3              STR      r3,[r0,#0xc]
;;;50     
;;;51       // set CPU clock divider - CCLK = 70MHz
;;;52       LPC_SC->CCLKCFG = CCLK_DIV;
000044  2403              MOVS     r4,#3
000046  f8c04084          STR      r4,[r0,#0x84]
00004a  3880              SUBS     r0,r0,#0x80
                  |L1.76|
;;;53     
;;;54       // wait for lock
;;;55       while (!((LPC_SC->PLL0STAT >> 26) & 0x1));
00004c  f8d01088          LDR      r1,[r0,#0x88]
000050  0e89              LSRS     r1,r1,#26
000052  07c9              LSLS     r1,r1,#31
000054  d0fa              BEQ      |L1.76|
;;;56     
;;;57       // connect PLL0
;;;58       LPC_SC->PLL0CON = 0x03;
000056  f8404f80          STR      r4,[r0,#0x80]!
;;;59       // feed
;;;60       LPC_SC->PLL0FEED = 0xAA;
00005a  60c2              STR      r2,[r0,#0xc]
;;;61       LPC_SC->PLL0FEED = 0x55;
00005c  60c3              STR      r3,[r0,#0xc]
00005e  3880              SUBS     r0,r0,#0x80
                  |L1.96|
;;;62     
;;;63       // wait for connected
;;;64       while (!((LPC_SC->PLL0STAT >> 25) & 0x1));
000060  f8d01088          LDR      r1,[r0,#0x88]
000064  0e49              LSRS     r1,r1,#25
000066  07c9              LSLS     r1,r1,#31
000068  d0fa              BEQ      |L1.96|
;;;65     }
00006a  bd10              POP      {r4,pc}
;;;66     
                          ENDP

                  init_MAM PROC
;;;67     void init_MAM(void)
00006c  4770              BX       lr
;;;68     {
;;;69     }
;;;70     
                          ENDP

                  init_PCB PROC
;;;71     void init_PCB(void)
00006e  4770              BX       lr
;;;72     {
;;;73     }
;;;74     
                          ENDP

                  VectorsRemap PROC
;;;75     void VectorsRemap(void)
000070  4770              BX       lr
;;;76     {
;;;77     }
;;;78     
                          ENDP

                  board_init PROC
;;;79     void board_init(void)
000072  b510              PUSH     {r4,lr}
;;;80     {
;;;81       init_PLL();
000074  f7fffffe          BL       init_PLL
;;;82       Timer_init();
000078  f7fffffe          BL       Timer_init
;;;83     	// wait for PLL to complete initialization after POR
;;;84     	Timer_Delay(100);
00007c  e8bd4010          POP      {r4,lr}
000080  2064              MOVS     r0,#0x64
000082  f7ffbffe          B.W      Timer_Delay
;;;85     	init_MAM();
;;;86     	init_PCB();
;;;87     	VectorsRemap();
;;;88     }
                          ENDP

000086  0000              DCW      0x0000
                  |L1.136|
                          DCD      0x400fc080
                  |L1.140|
                          DCD      0x0005003f
