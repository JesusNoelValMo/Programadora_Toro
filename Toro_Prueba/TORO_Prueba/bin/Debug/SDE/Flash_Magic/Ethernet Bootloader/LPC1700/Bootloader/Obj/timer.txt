; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--debug -c --asm --interleave -o.\Obj\timer.o --depend=.\Obj\timer.d --device=DARMP1 --apcs=interwork -O3 -I. -I.\Core_CM3 -ID:\Keil\ARM\INC\NXP --omf_browse=.\Obj\timer.crf timer\timer.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Timer_init PROC
;;;21     // initialize timer 0 to count milliseconds
;;;22     void Timer_init(void) {
000000  481f              LDR      r0,|L1.128|
;;;23       // timer 0 clocked with CCLK/1
;;;24       LPC_SC->PCLKSEL0 &= (0x3UL << 2);
000002  6801              LDR      r1,[r0,#0]
000004  f001010c          AND      r1,r1,#0xc
000008  6001              STR      r1,[r0,#0]
;;;25       LPC_SC->PCLKSEL0 |= (0x1UL << 2);
00000a  6802              LDR      r2,[r0,#0]
;;;26     
;;;27       // use timer 0 as timer (pclk = 64MHz)
;;;28       LPC_TIM0->CTCR = 0x00;
00000c  2100              MOVS     r1,#0
00000e  f0420204          ORR      r2,r2,#4              ;25
000012  6002              STR      r2,[r0,#0]            ;25
000014  f04f2040          MOV      r0,#0x40004000
000018  6701              STR      r1,[r0,#0x70]
;;;29       // prescaler - count at 1kHz
;;;30       LPC_TIM0->PR = 64000-1;
00001a  f64f12ff          MOV      r2,#0xf9ff
00001e  60c2              STR      r2,[r0,#0xc]
;;;31       // no matches or interrupts
;;;32       LPC_TIM0->MCR = 0x0000;
000020  6141              STR      r1,[r0,#0x14]
;;;33       // enable
;;;34       LPC_TIM0->TCR = 0x01;
000022  2101              MOVS     r1,#1
000024  6041              STR      r1,[r0,#4]
;;;35     }
000026  4770              BX       lr
;;;36     
                          ENDP

                  Timer_DeInit PROC
;;;39     // the state of the registers
;;;40     void Timer_DeInit(void) {
000028  2000              MOVS     r0,#0
;;;41       // disable
;;;42       LPC_TIM0->TCR  = 0x00;
00002a  f04f2140          MOV      r1,#0x40004000
00002e  6048              STR      r0,[r1,#4]
;;;43       LPC_TIM0->CTCR = 0x00;
000030  6708              STR      r0,[r1,#0x70]
;;;44       LPC_TIM0->PR   = 0;
000032  60c8              STR      r0,[r1,#0xc]
;;;45       LPC_TIM0->MCR  = 0x0000;
000034  6148              STR      r0,[r1,#0x14]
;;;46       LPC_TIM0->TC   = 0;
000036  6088              STR      r0,[r1,#8]
;;;47       LPC_TIM0->PC   = 0;
000038  6108              STR      r0,[r1,#0x10]
;;;48     }
00003a  4770              BX       lr
;;;49     
                          ENDP

                  Timer_GetTimestamp PROC
;;;50     // get the current timer 0 count
;;;51     unsigned long Timer_GetTimestamp(void) {
00003c  f04f2040          MOV      r0,#0x40004000
;;;52       return LPC_TIM0->TC;
000040  6880              LDR      r0,[r0,#8]
;;;53     }
000042  4770              BX       lr
;;;54     
                          ENDP

                  Timer_HasTimestampExpired PROC
;;;56     // returns 1 if in the past, 0 if not
;;;57     int Timer_HasTimestampExpired(unsigned long timestamp) {
000044  f04f2140          MOV      r1,#0x40004000
;;;58       unsigned long now = LPC_TIM0->TC;
000048  6889              LDR      r1,[r1,#8]
;;;59     
;;;60       if (now > timestamp)
;;;61       {
;;;62         if ((now - timestamp) < 0x80000000)
00004a  f04f4200          MOV      r2,#0x80000000
00004e  4281              CMP      r1,r0                 ;60
000050  d903              BLS      |L1.90|
000052  1a08              SUBS     r0,r1,r0
000054  4290              CMP      r0,r2
000056  d205              BCS      |L1.100|
000058  e002              B        |L1.96|
                  |L1.90|
;;;63           return 1;
;;;64         else
;;;65           return 0;
;;;66       }
;;;67       else
;;;68       {
;;;69         if ((timestamp - now) >= 0x80000000)
00005a  1a40              SUBS     r0,r0,r1
00005c  4290              CMP      r0,r2
00005e  d301              BCC      |L1.100|
                  |L1.96|
;;;70           return 1;
000060  2001              MOVS     r0,#1
;;;71         else
;;;72           return 0;
;;;73       }
;;;74     }
000062  4770              BX       lr
                  |L1.100|
000064  2000              MOVS     r0,#0                 ;72
000066  4770              BX       lr
;;;75     
                          ENDP

                  Timer_Delay PROC
;;;76     // pause for a specific number of milliseconds
;;;77     void Timer_Delay(unsigned long milliseconds) {
000068  b500              PUSH     {lr}
00006a  f04f2140          MOV      r1,#0x40004000
00006e  6889              LDR      r1,[r1,#8]
;;;78       unsigned long timestamp = Timer_GetTimestamp() + milliseconds;
000070  180b              ADDS     r3,r1,r0
                  |L1.114|
;;;79       while (!Timer_HasTimestampExpired(timestamp));
000072  4618              MOV      r0,r3
000074  f7fffffe          BL       Timer_HasTimestampExpired
000078  2800              CMP      r0,#0
00007a  d0fa              BEQ      |L1.114|
;;;80     }
00007c  bd00              POP      {pc}
                          ENDP

00007e  0000              DCW      0x0000
                  |L1.128|
                          DCD      0x400fc1a8
