; generated by ARM C/C++ Compiler, RVCT4.0 [Build 728]
; commandline ArmCC [--thumb --debug -c --asm --interleave -o.\Obj\board_init.o --depend=.\Obj\board_init.d --apcs=interwork -O3 -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\Philips --omf_browse=.\Obj\board_init.crf board_init\board_init.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  init_PLL PROC
;;;17     
;;;18     void init_PLL(void)
000000  b470              PUSH     {r4-r6}
;;;19     {
;;;20         unsigned MValue, NValue;
;;;21       
;;;22         if ( PLLSTAT & (1 << 25) )
000002  482d              LDR      r0,|L1.184|
000004  6881              LDR      r1,[r0,#8]
;;;23         {
;;;24       	PLLCON = 1;			/* Enable PLL, disconnected */
000006  2501              MOVS     r5,#1
000008  0189              LSLS     r1,r1,#6              ;22
;;;25       	PLLFEED = 0xaa;
00000a  23aa              MOVS     r3,#0xaa
;;;26       	PLLFEED = 0x55;
00000c  2455              MOVS     r4,#0x55
00000e  2900              CMP      r1,#0                 ;22
000010  da02              BGE      |L1.24|
000012  6005              STR      r5,[r0,#0]            ;24
000014  60c3              STR      r3,[r0,#0xc]          ;25
000016  60c4              STR      r4,[r0,#0xc]
                  |L1.24|
;;;27         }
;;;28       
;;;29         PLLCON = 0;				/* Disable PLL, disconnected */
000018  2100              MOVS     r1,#0
00001a  6001              STR      r1,[r0,#0]
;;;30         PLLFEED = 0xaa;
00001c  60c3              STR      r3,[r0,#0xc]
;;;31         PLLFEED = 0x55;
00001e  60c4              STR      r4,[r0,#0xc]
;;;32           
;;;33         SCS |= 0x20;			/* Enable main OSC */
000020  4926              LDR      r1,|L1.188|
000022  6a0a              LDR      r2,[r1,#0x20]
000024  2620              MOVS     r6,#0x20
000026  4332              ORRS     r2,r2,r6
000028  620a              STR      r2,[r1,#0x20]
                  |L1.42|
;;;34         while( !(SCS & 0x40) );	/* Wait until main OSC is usable */
00002a  6a0a              LDR      r2,[r1,#0x20]
00002c  0652              LSLS     r2,r2,#25
00002e  d5fc              BPL      |L1.42|
;;;35       
;;;36         CLKSRCSEL = 0x1;		/* select main OSC, 12MHz, as the PLL clock source */
000030  4921              LDR      r1,|L1.184|
000032  3180              ADDS     r1,r1,#0x80
000034  60cd              STR      r5,[r1,#0xc]
;;;37       
;;;38         PLLCFG = PLL_MVAL | (PLL_NVAL << 16);
000036  220b              MOVS     r2,#0xb
000038  6042              STR      r2,[r0,#4]
;;;39         PLLFEED = 0xaa;
00003a  60c3              STR      r3,[r0,#0xc]
;;;40         PLLFEED = 0x55;
00003c  60c4              STR      r4,[r0,#0xc]
;;;41             
;;;42         PLLCON = 1;				/* Enable PLL, disconnected */
00003e  6005              STR      r5,[r0,#0]
;;;43         PLLFEED = 0xaa;
000040  60c3              STR      r3,[r0,#0xc]
;;;44         PLLFEED = 0x55;
000042  60c4              STR      r4,[r0,#0xc]
;;;45       
;;;46         CCLKCFG = CCLKDIV;	/* Set clock divider */
000044  2205              MOVS     r2,#5
000046  604a              STR      r2,[r1,#4]
                  |L1.72|
;;;47       
;;;48         while ( ((PLLSTAT & (1 << 26)) == 0) );	/* Check lock bit status */
000048  6881              LDR      r1,[r0,#8]
00004a  0149              LSLS     r1,r1,#5
00004c  d5fc              BPL      |L1.72|
;;;49           
;;;50         MValue = PLLSTAT & 0x00007FFF;
00004e  6881              LDR      r1,[r0,#8]
;;;51         NValue = (PLLSTAT & 0x00FF0000) >> 16;
000050  6882              LDR      r2,[r0,#8]
000052  0449              LSLS     r1,r1,#17             ;50
000054  0c49              LSRS     r1,r1,#17             ;50
000056  0212              LSLS     r2,r2,#8
000058  0e12              LSRS     r2,r2,#24
                  |L1.90|
;;;52         while ((MValue != PLL_MVAL) && ( NValue != PLL_NVAL) );
00005a  290b              CMP      r1,#0xb
00005c  d001              BEQ      |L1.98|
00005e  2a00              CMP      r2,#0
000060  d1fb              BNE      |L1.90|
                  |L1.98|
;;;53       
;;;54         PLLCON = 3;				/* enable and connect */
000062  2103              MOVS     r1,#3
000064  6001              STR      r1,[r0,#0]
;;;55         PLLFEED = 0xaa;
000066  60c3              STR      r3,[r0,#0xc]
;;;56         PLLFEED = 0x55;
000068  60c4              STR      r4,[r0,#0xc]
                  |L1.106|
;;;57         while ( ((PLLSTAT & (1 << 25)) == 0) );	/* Check connect bit status */
00006a  6881              LDR      r1,[r0,#8]
00006c  0189              LSLS     r1,r1,#6
00006e  d5fc              BPL      |L1.106|
;;;58         return;
;;;59     }
000070  bc70              POP      {r4-r6}
000072  4770              BX       lr
;;;60     
                          ENDP

                  init_MAM PROC
;;;61     void init_MAM(void)
000074  4810              LDR      r0,|L1.184|
;;;62     {
;;;63         MAMCR = 0;
000076  2100              MOVS     r1,#0
000078  3880              SUBS     r0,r0,#0x80
00007a  6001              STR      r1,[r0,#0]
;;;64         MAMTIM = 3;
00007c  2103              MOVS     r1,#3
00007e  6041              STR      r1,[r0,#4]
;;;65         MAMCR = 2;
000080  2102              MOVS     r1,#2
000082  6001              STR      r1,[r0,#0]
;;;66     }
000084  4770              BX       lr
;;;67     
                          ENDP

                  init_PCB PROC
;;;68     void init_PCB(void)
000086  480e              LDR      r0,|L1.192|
;;;69     {
;;;70       /* Turn Off all LEDs  */
;;;71       FIO2DIR |= 0x0FF;
000088  6802              LDR      r2,[r0,#0]
00008a  21ff              MOVS     r1,#0xff
00008c  430a              ORRS     r2,r2,r1
00008e  6002              STR      r2,[r0,#0]
;;;72       FIO2CLR |= 0x0FF;
000090  69c2              LDR      r2,[r0,#0x1c]
000092  430a              ORRS     r2,r2,r1
000094  61c2              STR      r2,[r0,#0x1c]
;;;73     }
000096  4770              BX       lr
;;;74     
                          ENDP

                  VectorsRemap PROC
;;;75     void VectorsRemap(void)
000098  4770              BX       lr
;;;76     {
;;;77     }
;;;78     
                          ENDP

                  board_init PROC
;;;79     void board_init(void)
00009a  b510              PUSH     {r4,lr}
;;;80     {
;;;81         Timer_init();
00009c  f7fffffe          BL       Timer_init
;;;82         init_PLL();
0000a0  f7fffffe          BL       init_PLL
;;;83     	// wait for PLL to complete initialization after POR
;;;84     	Timer_Delay(100);
0000a4  2064              MOVS     r0,#0x64
0000a6  f7fffffe          BL       Timer_Delay
;;;85     	init_MAM();
0000aa  f7fffffe          BL       init_MAM
;;;86     	init_PCB();
0000ae  f7fffffe          BL       init_PCB
;;;87     	VectorsRemap();
;;;88     }
0000b2  bc10              POP      {r4}
0000b4  bc08              POP      {r3}
0000b6  4718              BX       r3
                          ENDP

                  |L1.184|
                          DCD      0xe01fc080
                  |L1.188|
                          DCD      0xe01fc180
                  |L1.192|
                          DCD      0x3fffc040
