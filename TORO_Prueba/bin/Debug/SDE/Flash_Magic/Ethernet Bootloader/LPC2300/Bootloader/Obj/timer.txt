; generated by ARM C/C++ Compiler, RVCT4.0 [Build 728]
; commandline ArmCC [--thumb --debug -c --asm --interleave -o.\Obj\timer.o --depend=.\Obj\timer.d --apcs=interwork -O3 -ID:\Keil\ARM\INC -ID:\Keil\ARM\INC\Philips --omf_browse=.\Obj\timer.crf timer\timer.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  Timer_init PROC
;;;21     // initialize timer 0 to count milliseconds
;;;22     void Timer_init(void) {
000000  481b              LDR      r0,|L1.112|
;;;23       // use timer 0 as timer (pclk = 12MHz)
;;;24       T0CTCR = 0x00;
000002  2100              MOVS     r1,#0
000004  6301              STR      r1,[r0,#0x30]
;;;25       // prescaler - count at 1kHz
;;;26       T0PR = 12000-1;
000006  481a              LDR      r0,|L1.112|
000008  4a1a              LDR      r2,|L1.116|
00000a  3840              SUBS     r0,r0,#0x40
00000c  60c2              STR      r2,[r0,#0xc]
;;;27       // no matches or interrupts
;;;28       T0MCR = 0x0000;
00000e  6141              STR      r1,[r0,#0x14]
;;;29       // enable
;;;30       T0TCR = 0x01;
000010  2101              MOVS     r1,#1
000012  6041              STR      r1,[r0,#4]
;;;31     }
000014  4770              BX       lr
;;;32     
                          ENDP

                  Timer_DeInit PROC
;;;35     // the state of the registers
;;;36     void Timer_DeInit(void) {
000016  4916              LDR      r1,|L1.112|
;;;37       // disable
;;;38       T0TCR  = 0x00;
000018  2000              MOVS     r0,#0
00001a  3940              SUBS     r1,r1,#0x40
00001c  6048              STR      r0,[r1,#4]
;;;39       T0CTCR = 0x00;
00001e  4a14              LDR      r2,|L1.112|
000020  6310              STR      r0,[r2,#0x30]
;;;40       T0PR   = 0;
000022  60c8              STR      r0,[r1,#0xc]
;;;41       T0MCR  = 0x0000;
000024  6148              STR      r0,[r1,#0x14]
;;;42       T0TC   = 0;
000026  6088              STR      r0,[r1,#8]
;;;43       T0PC   = 0;
000028  6108              STR      r0,[r1,#0x10]
;;;44     }
00002a  4770              BX       lr
;;;45     
                          ENDP

                  Timer_GetTimestamp PROC
;;;46     // get the current timer 0 count
;;;47     unsigned long Timer_GetTimestamp(void) {
00002c  4810              LDR      r0,|L1.112|
;;;48       return T0TC;
00002e  3840              SUBS     r0,r0,#0x40
000030  6880              LDR      r0,[r0,#8]
;;;49     }
000032  4770              BX       lr
;;;50     
                          ENDP

                  Timer_HasTimestampExpired PROC
;;;52     // returns 1 if in the past, 0 if not
;;;53     int Timer_HasTimestampExpired(unsigned long timestamp) {
000034  490e              LDR      r1,|L1.112|
;;;54       unsigned long now = T0TC;
000036  3940              SUBS     r1,r1,#0x40
000038  6889              LDR      r1,[r1,#8]
;;;55     
;;;56       if (now > timestamp)
;;;57       {
;;;58         if ((now - timestamp) < 0x80000000)
00003a  2201              MOVS     r2,#1
00003c  07d2              LSLS     r2,r2,#31
00003e  4281              CMP      r1,r0                 ;56
000040  d903              BLS      |L1.74|
000042  1a08              SUBS     r0,r1,r0
000044  4290              CMP      r0,r2
000046  d205              BCS      |L1.84|
000048  e002              B        |L1.80|
                  |L1.74|
;;;59           return 1;
;;;60         else
;;;61           return 0;
;;;62       }
;;;63       else
;;;64       {
;;;65         if ((timestamp - now) >= 0x80000000)
00004a  1a40              SUBS     r0,r0,r1
00004c  4290              CMP      r0,r2
00004e  d301              BCC      |L1.84|
                  |L1.80|
;;;66           return 1;
000050  2001              MOVS     r0,#1
;;;67         else
;;;68           return 0;
;;;69       }
;;;70     }
000052  4770              BX       lr
                  |L1.84|
000054  2000              MOVS     r0,#0                 ;68
000056  4770              BX       lr
;;;71     
                          ENDP

                  Timer_Delay PROC
;;;72     // pause for a specific number of milliseconds
;;;73     void Timer_Delay(unsigned long milliseconds) {
000058  4905              LDR      r1,|L1.112|
00005a  b500              PUSH     {lr}
00005c  3940              SUBS     r1,r1,#0x40
00005e  6889              LDR      r1,[r1,#8]
;;;74       unsigned long timestamp = Timer_GetTimestamp() + milliseconds;
000060  180b              ADDS     r3,r1,r0
                  |L1.98|
;;;75       while (!Timer_HasTimestampExpired(timestamp));
000062  0018              MOVS     r0,r3
000064  f7fffffe          BL       Timer_HasTimestampExpired
000068  2800              CMP      r0,#0
00006a  d0fa              BEQ      |L1.98|
;;;76     }
00006c  bc08              POP      {r3}
00006e  4718              BX       r3
                          ENDP

                  |L1.112|
                          DCD      0xe0004040
                  |L1.116|
                          DCD      0x00002edf
